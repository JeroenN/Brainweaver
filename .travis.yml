sudo: true
language: cpp
compiler: gcc
dist: trusty # Qt5, from https://gist.github.com/jreese/6207161#gistcomment-1462109

# Coverity Scan
env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "OU8A+Po0kalZ1TJZRPgT8C/ZOlwcw3n+Jxj/imvFrhvvNdR7Z+p1LoRo4QiLqMFZXhKN9N4QXm5diUnYqrfTtiRTyU+bxuV56glxcuVqEiWomRyl58PpBZEIo3nnu+sJQjNc/F9wqEi0DXsNpXDZUSWvmCOeQpv42fHiV2HOegKm6OBhphE1jBbmxmcAZsA3o/TnEQavdl74eeBgb/VHaVWAavhTmnSQ9ThP1gqcTHIpPzZVU9YJSr8u2SGhPwUiAeoqwMP56HaPi/4jRNmO1goXr13xqqDepy7cWwCCxu7Be5Ay/PEmynUS+hVogtuT5aU/pdb1z1DmMCIFnfotx32QqlkJL/TCUEnlGiU7lJij1q8/aHbhhNhxdRA1CkAO9SB7r1NI+/FgqWQhUizNeWYVVGPI9adKU0YewuX7LKPBQT7tjxtl3W3uchIT0McB1li5w7UfJ255P7I29V7BVdK33P41jkbPz6OkW+WYx2tvt4Xqbzm2nN4Wo80wQrzXcg/Bb+vKrZ5DZN4h43+AwVB4e76Ce6LjnGme4/j4QFZrQLFcflXo1bE1os8NuaI3Ed0H2F9Lglrh+gWFbBwcJmNROIxlFMW5dhiJISHKGigUzEv4s0RjEicT4uh6Bn8Zpp3n/srd3Gr4tYjnRVeMqSaNVNDKIhFQ8cfTwkRX+60="


addons:
  # Boost
  apt: 
    packages: libboost-all-dev
  # Coverity Scan
  coverity_scan:
    project:
      name: "richelbilderbeek/Brainweaver"
      description: "Build submitted via Travis CI"
    notification_email: richel@richelbilderbeek.nl
    build_command_prepend: "./configure; make clean"
    build_command:   "make -j 4"
    branch_pattern: coverity_scan

before_install:
  # Qt5, no need to, Trusty handles this
  #- sudo add-apt-repository --yes ppa:ubuntu-sdk-team/ppa
  #- sudo apt-get update -qq
  # C++14
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo apt-get update -qq

install: 
  # C++14
  - sudo apt-get install -qq g++-5
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 90
  # Qt5
  - sudo apt-get install -qq libqt5webkit5-dev qtdeclarative5-dev libqt5svg5*
  - export QMAKE=/usr/lib/x86_64-linux-gnu/qt5/bin/qmake
  # cppcheck
  - sudo apt-get install -qq cppcheck
  # Coverity Scan
  - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
  # Codecov
  - sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-5 90
  - sudo pip install codecov
  # OCLint
  - ./install_oclint.sh
  # valgrind, for helgrind and memcheck
  - sudo apt-get install -qq valgrind
  # SLOCcount
  - sudo apt-get install sloccount

# Start virtual X server, from https://docs.travis-ci.com/user/gui-and-headless-browsers/
before_script:
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3 # give xvfb some time to start

script: 
  - ./download_other_githubs
  - ./build_other_githubs.sh
  # Build console test
  - qmake BrainweaverConsoleTest.pro
  - make debug
  - ./BrainweaverConsoleTest
  # Build and run desktop test
  - qmake BrainweaverDesktopTest.pro
  - make debug
  - ./BrainweaverDesktopTest
  # helgrind
  - valgrind --tool=helgrind --log-file=helgrind.log -v ./BrainweaverDesktopTest
  - cat helgrind.log
  # memcheck
  - valgrind --leak-check=full -v --show-reachable=yes --log-file=memcheck.log ./BrainweaverDesktopTest
  - cat memcheck.log
  # Build 'true' executables
  - qmake BrainweaverDeveloper.pro
  - make debug
  - qmake BrainweaverAssessor.pro
  - make debug
  - qmake BrainweaverStudent.pro
  - make debug
  # cppcheck
  - cppcheck --quiet --error-exitcode=1 . 
  # Get code coverage
  - ./get_code_cov.sh >/dev/null
  - codecov
  # Call OCLint
  - ./do_oclint
  # Get my folder
  - my_github=${PWD##*/}  
  # SLOCcount
  - cd ..; sloccount --overhead 1 --personcost 22614 the_richel_setup; cd $my_github

after_success:
  - bash <(curl -s https://codecov.io/bash)
