 #!/bin/bash

# From the documentation:
# For example, to include line numbers for a assertEquals() 
# function call, replace the assertEquals() with ${_ASSERT_EQUALS_}.


# Prerequisite scripts
cd ../../testing_cpp_gui_applications_tutorial/scripts
. ./get_dialog_id_by_title
. ./close_first_dialog_by_title

# Go back
cd ../../Brainweaver/test_scripts

# Brainweaver scripts
. ./close_assessor_menu
. ./close_assessor_set_focal_question
. ./close_developer_menu
. ./close_assessor_menu
. ./close_student_menu
. ./close_student_open_file_dialog
. ./close_student_start
. ./create_focal_question
. ./exit_assessor_menu
. ./exit_assessor_set_focal_question
. ./exit_developer_menu
. ./exit_student_menu
. ./exit_student_open_file_dialog
. ./exit_student_start
. ./find_assessor_menu
. ./find_assessor_save_focal_question
. ./find_assessor_set_focal_question
. ./find_developer_menu
. ./find_save_concept_map
. ./find_student_open_file_dialog
. ./find_student_menu
. ./find_student_start
. ./goto_assessor_menu
. ./goto_assessor_set_focal_question
. ./goto_developer_menu
. ./goto_student_menu
. ./goto_student_open_file_dialog
. ./save_student_name
. ./goto_student_start
. ./start_brainweaver

test_goto_student_start()
{
  filename="test_goto_student_start.cmp"
  question="What does 'test_goto_student_start' do?"
  student_name="John 'goto_student_start' Doe"
  # echo "filename: "$filename
  # echo "question: "$question
  # echo "student_name: "$student_name

  # echo "Input file must be absent"
  if [ -f $filename ]; then
    rm $filename
  fi

  # echo "Save the student name"
  goto_student_start  "$question" "$student_name" "$filename"

  sleep 1

  id=`find_student_start`
  if [ ! $id ]; then
    fail "Student start dialog cannot be found"
    return
  fi

  # echo "Close student start dialog"
  exit_student_start

  # Should be absent again
  id=`find_developer_menu`
  #${_ASSERT_NULL_} "$id"
  if [ $id ]; then
    fail "Closed dialog must not have an ID"
  fi
}

# The first screen
test_start_brainweaver()
{
  # echo "Developer start menu must initially be absent"
  id=`get_dialog_id_by_title 'Menu voor de ontwikkelaar'`
  if [ $id ]; then
    fail "Absent dialog must not have an ID"
    return
  fi

  # echo "Create developer start menu"
  start_brainweaver
  sleep 1
  id=`get_dialog_id_by_title 'Menu voor de ontwikkelaar'`
  if [ ! $id ]; then
    fail "Developer main menu cannot be found"
    return
  fi

  # echo "Close developer start menu"
  xdotool windowactivate $id sleep 0.2 key Escape sleep 1.0

  # Should be absent again
  id=`get_dialog_id_by_title 'Menu voor de ontwikkelaar'`
  #${_ASSERT_NULL_} "$id"
  if [ $id ]; then
    fail "Closed dialog must not have an ID"
    return
  fi
}

test_close_developer_menu()
{
  # echo "Developer start menu must initially be absent"
  id=`get_dialog_id_by_title 'Menu voor de ontwikkelaar'`
  if [ $id ]; then
    fail "Absent dialog must not have an ID"
    return
  fi

  # echo "Create developer start menu"
  start_brainweaver
  sleep 1
  id=`get_dialog_id_by_title 'Menu voor de ontwikkelaar'`
  if [ ! $id ]; then
    fail "Developer main menu cannot be found"
    return
  fi

  close_developer_menu
  sleep 1

  # Should be closed
  id=`get_dialog_id_by_title 'Menu voor de ontwikkelaar'`
  #${_ASSERT_NULL_} "$id"
  if [ $id ]; then
    fail "Developer main menu has not been closed"
  fi
}

test_exit_developer_menu()
{
  # echo "Developer start menu must initially be absent"
  id=`get_dialog_id_by_title 'Menu voor de ontwikkelaar'`
  if [ $id ]; then
    fail "Absent dialog must not have an ID"
    return
  fi

  # echo "Create developer start menu"
  start_brainweaver
  sleep 1
  id=`get_dialog_id_by_title 'Menu voor de ontwikkelaar'`
  if [ ! $id ]; then
    fail "Developer main menu cannot be found"
    return
  fi

  exit_developer_menu
  sleep 1

  # Should be closed
  id=`get_dialog_id_by_title 'Menu voor de ontwikkelaar'`
  #${_ASSERT_NULL_} "$id"
  if [ $id ]; then
    fail "Developer main menu has not been closed"
  fi
}

test_find_developer_menu()
{
  # echo "Developer start menu must initially be absent"
  id=`find_developer_menu`
  if [ $id ]; then
    fail "Absent dialog must not have an ID"
    return
  fi

  # echo "Create developer start menu"
  start_brainweaver
  sleep 1
  id=`find_developer_menu`
  if [ ! $id ]; then
    fail "Developer menu cannot be found"
    return
  fi

  # echo "Close developer menu"
  close_developer_menu

  # Should be absent again
  id=`find_developer_menu`
  #${_ASSERT_NULL_} "$id"
  if [ $id ]; then
    fail "Closed dialog must not have an ID"
  fi
}


test_goto_developer_menu()
{
   # echo "Developer start menu must initially be absent"
  id=`find_developer_menu`
  if [ $id ]; then
    fail "Absent dialog must not have an ID"
    return
  fi

  # echo "Create developer start menu"
  goto_developer_menu
  sleep 1

  id=`find_developer_menu`
  if [ ! $id ]; then
    fail "Developer menu cannot be found"
    return
  fi

  # echo "Close developer menu"
  close_developer_menu

  # Should be absent again
  id=`find_developer_menu`
  #${_ASSERT_NULL_} "$id"
  if [ $id ]; then
    fail "Closed dialog must not have an ID"
  fi
}

test_goto_assessor_menu()
{
  # echo "Assessor start menu dialog must initially be absent"
  id=`get_dialog_id_by_title 'Mijn persoonlijke werktheorie, programma voor de assessor'`

  #${_ASSERT_NULL_} "$id"
  if [ $id ]; then
    fail "Absent dialog must not have an ID"
    return
  fi

  # echo "Creating assessor start menu dialog"
  goto_assessor_menu
  sleep 1

  # echo "Assessor start menu dialog should be present now"
  id=`get_dialog_id_by_title 'Mijn persoonlijke werktheorie, programma voor de assessor'`
  if [ ! $id ]; then
    fail "Could not find create assessor start menu dialog"
    return
  fi

  # echo "Close assessor start menu dialog"
  xdotool windowactivate $id sleep 0.2 key Escape sleep 1.0

  # echo "Close developer main menu dialog"
  id=`get_dialog_id_by_title 'Menu voor de ontwikkelaar'`
  if [ ! $id ]; then
    fail "Could not find developer main menu dialog"
  fi
  xdotool windowactivate $id sleep 0.2 key Escape sleep 1.0
}

test_find_assessor_menu()
{
  # echo "Assessor start menu must initially be absent"
  id=`find_assessor_menu`
  if [ $id ]; then
    fail "Absent dialog must not have an ID"
    return
  fi

  # echo "Create Assessor start menu"
  goto_assessor_menu
  sleep 1
  id=`find_assessor_menu`
  if [ ! $id ]; then
    fail "Assessor start menu cannot be found"
    return
  fi

  # echo "Close assessor start menu"
  close_assessor_menu
  # Should be absent again
  id=`find_assessor_menu`
  #${_ASSERT_NULL_} "$id"
  if [ $id ]; then
    fail "Closed dialog must not have an ID"
  fi

  # echo "Close developer menu"
  close_developer_menu
  # Should be absent again
  id=`find_developer_menu`
  #${_ASSERT_NULL_} "$id"
  if [ $id ]; then
    fail "Closed dialog must not have an ID"
  fi
}

test_exit_assessor_menu()
{
  # echo "Assessor start menu must initially be absent"
  id=`find_assessor_menu`
  if [ $id ]; then
    fail "Absent dialog must not have an ID"
    return
  fi

  # echo "Create Assessor start menu"
  goto_assessor_menu
  sleep 1
  id=`find_assessor_menu`
  if [ ! $id ]; then
    fail "Assessor start menu cannot be found"
    return
  fi

  # echo "Exiting from assessor start menu"
  exit_assessor_menu

  id=`find_assessor_menu`
  #${_ASSERT_NULL_} "$id"
  if [ $id ]; then
    fail "Closed dialog must not have an ID"
    return
  fi
  id=`find_developer_menu`
  #${_ASSERT_NULL_} "$id"
  if [ $id ]; then
    fail "Closed dialog must not have an ID"
    return
  fi
}

test_find_assessor_set_focal_question()
{
  # echo "Assessor start menu must initially be absent"
  id=`find_assessor_set_focal_question`
  if [ $id ]; then
    fail "Absent dialog must not have an ID"
    return
  fi

  # echo "Create Assessor start menu"
  goto_assessor_set_focal_question
  sleep 1
  id=`find_assessor_set_focal_question`
  if [ ! $id ]; then
    fail "Assessor 'set focal question' dialog cannot be found"
    return
  fi

  # echo "Close assessor 'set focal question' dialog"
  close_assessor_set_focal_question

  # Should be absent again
  id=`find_assessor_set_focal_question`
  #${_ASSERT_NULL_} "$id"
  if [ $id ]; then
    fail "Closed dialog must not have an ID"
  fi

  # echo "Close assessor start menu"
  close_assessor_menu
  # Should be absent again
  id=`find_assessor_menu`
  #${_ASSERT_NULL_} "$id"
  if [ $id ]; then
    fail "Closed dialog must not have an ID"
  fi

  # echo "Close developer menu"
  close_developer_menu
  # Should be absent again
  id=`find_developer_menu`
  #${_ASSERT_NULL_} "$id"
  if [ $id ]; then
    fail "Closed dialog must not have an ID"
  fi
}

test_exit_assessor_set_focal_question()
{
  # echo "Assessor start menu must initially be absent"
  id=`find_assessor_set_focal_question`
  if [ $id ]; then
    fail "Absent dialog must not have an ID"
    return
  fi

  # echo "Create Assessor start menu"
  goto_assessor_set_focal_question
  sleep 1
  id=`find_assessor_set_focal_question`
  if [ ! $id ]; then
    fail "Assessor 'set focal question' dialog cannot be found"
    return
  fi

  # echo "Close assessor 'set focal question' dialog"
  exit_assessor_set_focal_question

  # Should be absent again
  id=`find_assessor_set_focal_question`
  if [ $id ]; then
    fail "Closed dialog must not have an ID"
    return
  fi
  id=`find_assessor_menu`
  #${_ASSERT_NULL_} "$id"
  if [ $id ]; then
    fail "Closed dialog must not have an ID"
    return
  fi
  id=`find_developer_menu`
  #${_ASSERT_NULL_} "$id"
  if [ $id ]; then
    fail "Closed dialog must not have an ID"
    return
  fi
}

test_create_focal_question_flow()
{
  filename="test_create_focal_question_flow.cmp"

  # echo "Create"
  create_focal_question "What is A + B?" "$filename"

  # Everything should be absent
  id=`find_assessor_set_focal_question`
  if [ $id ]; then
    fail "Closed assessor 'set focal question' dialog must not have an ID"
    return
  fi
  id=`find_assessor_menu`
  if [ $id ]; then
    fail "Closed assessor menu must not have an ID"
    return
  fi
  id=`find_developer_menu`
  if [ $id ]; then
    fail "Closed develop menu must not have an ID"
    return
  fi

  # Cleanup
  rm $filename
}

test_create_focal_question_data()
{
  question="What is A plus B?"
  filename="test_create_focal_question_data.cmp"

  # Delete output filename if already present
  if [ -f $filename ]; then
    rm $filename
  fi

  # echo "Create"
  create_focal_question "$question" "$filename"

  if [ ! -f $filename ]; then
    fail "Output file '"$filename"' not created"
    return
  fi

  ok=`cat $filename | egrep "$question" | wc --words`

  if [ $ok -lt 1 ]; then
    fail "Question "$question"in file '"$filename"' not created"
    return
  fi

  # Cleanup
  rm $filename
}

test_goto_student_open_file_dialog()
{
  # echo "Student open file dialog must initially be absent"
  id=`find_student_open_file_dialog`

  #${_ASSERT_NULL_} "$id"
  if [ $id ]; then
    fail "Absent dialog must not have an ID"
    return
  fi

  echo "Creating student open file dialog"
  goto_student_open_file_dialog
  sleep 1

  echo "Student open file dialog should be present now"
  id=`find_student_open_file_dialog`
  if [ ! $id ]; then
    fail "Could not find student open file dialog"
    return
  fi

  echo "Close student open file dialog"
  close_student_open_file_dialog

  echo "Close developer main menu dialog"
  close_developer_menu
}

test_goto_student_menu()
{
  filename="test_goto_student_menu.cmp"

  # echo "Create input file iff absent"
  if [ ! -f $filename ]; then
    create_focal_question "What does 'test_goto_student_menu' do?" "$filename"
  fi

  # echo "Input file must be present"
  if [ ! -f $filename ]; then
    fail "Input file '"$filename"' absent"
    return
  fi

  # echo "Student menu  must initially be absent"
  id=`find_student_menu`

  #${_ASSERT_NULL_} "$id"
  if [ $id ]; then
    fail "Absent dialog must not have an ID"
    return
  fi

  # echo "Creating student menu"
  goto_student_menu "$filename"
  sleep 1

  # echo "Student menu should be present now"
  id=`find_student_menu`
  if [ ! $id ]; then
    fail "Could not find student menu"
    return
  fi

  # echo "Close student menu"
  close_student_menu

  # echo "Close developer main menu dialog"
  close_developer_menu
}

test_save_student_name()
{
  filename="test_save_student_name.cmp"
  question="What does 'test_save_student_name' do?"
  student_name="John 'save_student_name' Doe"
  # echo "filename: "$filename
  # echo "question: "$question
  # echo "student_name: "$student_name

  # echo "Input file must be absent"
  if [ -f $filename ]; then
    rm $filename
  fi

  # echo "Save the student name"
  save_student_name "$question" "$student_name" "$filename"

  sleep 1

  # echo "Exit student menu"
  exit_student_menu
}

# load shunit2
. ../../shunit2/source/2.1/src/shunit2